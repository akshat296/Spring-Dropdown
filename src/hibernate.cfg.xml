<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
 "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
 "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
 
<hibernate-configuration>
 
 <session-factory>
  <!-- Database connection settings
  The Database information is given so that hibernate can use it to connect with 
   the database.  
  
   -->
  <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
  <property name="connection.url">jdbc:mysql://localhost:3306/hibernate</property>
  <property name="connection.username">root</property>
  <property name="connection.password">root</property>
   
  <!-- JDBC connection pool (use the built-in) -->
  <property name="connection.pool_size">10</property>
   
  <!-- SQL dialect.To look for dilect name search in the hibernate-core-4.1.9.final.jar
  in the dilect package.It tell the hibernate how to write query for a perticular database.
  
  If you dont know what is the name of dilect of your database,
  just look in org.hibernate.dilect package of hibernate core jar.
   -->
  <property name="dialect">org.hibernate.dialect.MySQLDialect</property>
   
  <!-- Enable Hibernate's automatic session context management -->
  <property name="current_session_context_class">thread</property>
 
  <!-- Disable the second-level cache.
  This is very usefull that i will discuss in later tutorial of second level cache
   -->
  <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>
   
  <!-- Echo all executed SQL to stdout
  If show_sql is true then it will show the sql query 
  that hibernate is using for database communication on the console.
  If it is false then it will not echo the sql query on your console.
   -->
  <property name="show_sql">true</property>
   
  <!-- Drop and re-create the database schema on startup. It can be update or create 
  If it is create then every time the older data from the table will be flush.
  If it is true then the previous data will be reserved along with new data.
  -->
  <property name="hbm2ddl.auto">update</property>
   
  <!-- Mapping files.Here you need to list all the entity class along their package name.
  Here we need to listout all of our entity class so that hibernate know that these are
  entity class and table need to be create for entity class by hibernate.
  
   -->
  
  <mapping class="com.thinksys.demo.model.Country"/>
  
 </session-factory>
</hibernate-configuration>